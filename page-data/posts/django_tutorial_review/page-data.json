{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/django_tutorial_review","result":{"data":{"markdownRemark":{"id":"0a1ff7c6-9cd9-578d-859f-0a35c78fdddd","html":"<h2 id=\"django란\" style=\"position:relative;\"><a href=\"#django%EB%9E%80\" aria-label=\"django란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Django란?</h2>\n<blockquote>\n<p>파이썬 기반으로 작성된 오픈소스 웹 어플리케이션 프레임워크입니다.\n프레임워크란 간단히 설명하자면 뼈대, 골조라고도 하며 프로그램을 개발하는 데에 있어서 사용되는 기본 개념 구조입니다.\n즉, 파이썬 프로그래밍 언어를 기반으로 한 동적인 웹을 작성하는 데에 있어 장고라는 기본 개념 구조 요소를 이용하여 개발하게 되는 것입니다.</p>\n</blockquote>\n<h2 id=\"프로젝트-생성\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"프로젝트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 생성</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">$ django<span class=\"token operator\">-</span>admin startproject mysite</code></pre></div>\n<p>이 명령은 현재 디렉토리에서 mysite 라는 디렉토리를 생성한다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">mysite<span class=\"token operator\">/</span>\n    manage<span class=\"token punctuation\">.</span>py\n    mysite<span class=\"token operator\">/</span>\n        __init__<span class=\"token punctuation\">.</span>py\n        settings<span class=\"token punctuation\">.</span>py\n        urls<span class=\"token punctuation\">.</span>py\n        asgi<span class=\"token punctuation\">.</span>py\n        wsgi<span class=\"token punctuation\">.</span>py</code></pre></div>\n<p> <code class=\"language-text\">mysite/</code>디렉토리 내부에는 프로젝트를 위한 실제 python 패키지들이 저장된다.\n<code class=\"language-text\">mysite/__init__.py</code>: Python으로 하여금 이 디렉토리를 패키지처럼 다루라고 알려주는 용도의 단순한 빈 파일이다.\n<code class=\"language-text\">mysite/settings.py</code>: 현재 Django 프로젝트의 환경 및 구성을 저장합니다. Django settings에서 환경 설정이 어떻게 동작하는지 확인할 수 있다.\n<code class=\"language-text\">mysite/urls.py</code>: 현재 Django project 의 URL 선언을 저장합니다. Django 로 작성된 사이트의 “목차” 라고 할 수 있다.\n<code class=\"language-text\">mysite/asgi.py</code>: 현재 프로젝트를 서비스하기 위한 ASGI 호환 웹 서버의 진입점이다.\n<code class=\"language-text\">mysite/wsgi.py</code>: 현재 프로젝트를 서비스하기 위한 WSGI 호환 웹 서버의 진입점이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">python manage<span class=\"token punctuation\">.</span>py runserver</code></pre></div>\n<p>이 코드를 작성하면 서버를 구동하여 브라우저에서 프로젝트가 제대로 작동하는지 알 수 있다.\n포트 번호를 안 넣으면 default로 8000번으로 실행되며,</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">python manage<span class=\"token punctuation\">.</span>py runserver <span class=\"token number\">8080</span></code></pre></div>\n<p>뒤에 이렇게 포트번호를 입력해 줄 수도 있다.</p>\n<h2 id=\"설문조사-앱-만들기\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AC%B8%EC%A1%B0%EC%82%AC-%EC%95%B1-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"설문조사 앱 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설문조사 앱 만들기</h2>\n<p>이제 django 프로젝트로 설문조사 앱을 만들어 볼 것이다.</p>\n<p>앱을 생성하기 위해 manage.py가 존재하는 디렉토리에서 다음 명령어를 입력해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">python manage<span class=\"token punctuation\">.</span>py startapp polls</code></pre></div>\n<p>polls라는 디렉토리가 생성되고, 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">polls<span class=\"token operator\">/</span>\n    __init__<span class=\"token punctuation\">.</span>py\n    admin<span class=\"token punctuation\">.</span>py\n    apps<span class=\"token punctuation\">.</span>py\n    migrations<span class=\"token operator\">/</span>\n        __init__<span class=\"token punctuation\">.</span>py\n    models<span class=\"token punctuation\">.</span>py\n    tests<span class=\"token punctuation\">.</span>py\n    views<span class=\"token punctuation\">.</span>py</code></pre></div>\n<h2 id=\"뷰-작성\" style=\"position:relative;\"><a href=\"#%EB%B7%B0-%EC%9E%91%EC%84%B1\" aria-label=\"뷰 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>뷰 작성</h2>\n<p><code class=\"language-text\">polls/view.py</code>를 열어 다음 코드를 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse\n\n\ndef <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, world. You're at the polls index.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>다음 단계는, 최상위 URLconf에서 polls.urls 모듈을 바라보게 설정해야한다. mysite/urls.py파일을 열고 다음과 같이 코드를 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> include<span class=\"token punctuation\">,</span> path\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'polls/'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">include</span><span class=\"token punctuation\">(</span><span class=\"token string\">'polls.urls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'admin/'</span><span class=\"token punctuation\">,</span> admin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span>urls<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<blockquote>\n<p>include()함수는 다른 urlconf들을 참조할 수 있도록 도와준다. </p>\n</blockquote>\n<p>자 이제 <a href=\"http://127.0.0.1:8000/polls\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://127.0.0.1:8000/polls</a> 로 들어가면\n-> studyPy/urls.py 전체 URLconf를 통하고\n-> polls/urls.py polls URLconf를 통하여\n-> polls/views.py index 함수가 실행되어</p>\n<p>“Hello World with Django” 가 뜨게 된다!</p>\n<h2 id=\"데이터베이스-설치\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%84%A4%EC%B9%98\" aria-label=\"데이터베이스 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스 설치</h2>\n<p>이제, <code class=\"language-text\">mysite/setting.py</code> 파일을 열어보자.\n이 파일은 django 설정을 모듈 변수로 표현한 일반적인 python 모듈이다. 기본적으로는 <strong>SQLite</strong>을 사용하도록 구성되어 있다.</p>\n<h3 id=\"지역시간-설정\" style=\"position:relative;\"><a href=\"#%EC%A7%80%EC%97%AD%EC%8B%9C%EA%B0%84-%EC%84%A4%EC%A0%95\" aria-label=\"지역시간 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>지역시간 설정</h3>\n<p>데이터베이스를 수정하기 전에 <code class=\"language-text\">setting.py</code>의 TIME_ZONE이라는 변수를 한국에 맞게 변경해야한다.\n데이터를 저장할 때 생성 날짜와 시간을 자동으로 정할 경우, 한국 시간으로 저장하기 위해서이다.\n<code class=\"language-text\">mysite/mysite</code>에서 <code class=\"language-text\">vi setting.py</code>을 치고 들어가서 </p>\n<p><code class=\"language-text\">TIME_ZONE : &#39;Asia/Seoul&#39;</code>로 바꿔준다. 원래는 <code class=\"language-text\">UTC</code>로 되어있다.</p>\n<h3 id=\"테이블-생성\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%83%9D%EC%84%B1\" aria-label=\"테이블 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테이블 생성</h3>\n<p>TIME<em>ZONE 윗 편을 보면 INSTALLED</em>APPS 라는 리스트가 있다. 이 리스트는 장고에서 활성화된 모든 장고 APP들을 나타낸다</p>\n<p>django.contrib.admin - 관리용 사이트<br>\ndjango.contrib.auth - 인증 시스템<br>\ndjango.contrib.contenttypes - 컨텐츠 타입을 위한 프레임워크<br>\ndjango.contrib.sessions - 세션 프레임워크<br>\ndjango.contrib.messages - 메세징 프레임워크<br>\ndjango.contrib.staticfiles - 정적 파일을 관리하는 프레임워크<br></p>\n<p><code class=\"language-text\">$ ./manage.py migrate</code> 또는 <code class=\"language-text\">python manage.py migrate</code>\n이 명령어를 실행하면 위의 INSTALLED_APPS 리스트 안의 App 에서 제공되는 데이터베이스 <strong>migrations</strong>와 settings.py의 <strong>데이터베이스 설정</strong>에 따라 테이블이 생성된다.</p>\n<h2 id=\"모델-생성\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%B8-%EC%83%9D%EC%84%B1\" aria-label=\"모델 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모델 생성</h2>\n<p><code class=\"language-text\">polls/models.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Question</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    question_text <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span><span class=\"token function\">CharField</span><span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    pub_date <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span><span class=\"token function\">DateTimeField</span><span class=\"token punctuation\">(</span><span class=\"token string\">'date published'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Choice</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    question <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span><span class=\"token function\">ForeignKey</span><span class=\"token punctuation\">(</span>Question<span class=\"token punctuation\">,</span> on_delete<span class=\"token operator\">=</span>models<span class=\"token punctuation\">.</span><span class=\"token constant\">CASCADE</span><span class=\"token punctuation\">)</span>\n    choice_text <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span><span class=\"token function\">CharField</span><span class=\"token punctuation\">(</span>max_length<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n    votes <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span><span class=\"token function\">IntegerField</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">default</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Question과 Choice라는 2가지 모델을 만들었다.\nQuestion은 question과 Publication date를 담고 있고, Choice는 CharField와 IntegerField라는 2개의 필드를 담고있다.</p>\n<h2 id=\"모델-활성화\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%B8-%ED%99%9C%EC%84%B1%ED%99%94\" aria-label=\"모델 활성화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모델 활성화</h2>\n<p>앱을 현재의 프로젝트에 포함시키기 위해서는, 앱의 구성 클래스에 대한 참조를 INSTALLED<em>APPS 설정에 추가해야 한다. PollsConfig 클래스는 polls/apps.py 파일 내에 존재한다. 따라서, 점으로 구분된 경로는 ‘polls.apps.PollsConfig’가 된다. 이 점으로 구분된 경로를, mysite/settings.py 파일을 편집하여 **INSTALLED</em>APPS **설정에 추가하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token constant\">INSTALLED_APPS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'polls.apps.PollsConfig'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.admin'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.auth'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.contenttypes'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.sessions'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.messages'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.staticfiles'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h4 id=\"migration\" style=\"position:relative;\"><a href=\"#migration\" aria-label=\"migration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>migration</h4>\n<p>이제 장고가 polls 의 존재를 알게 되었다. 자 이제 아까 얘기한 <strong>migration</strong> 을 사용할 차례이다❗️</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">python manage<span class=\"token punctuation\">.</span>py makemigrations polls</code></pre></div>\n<p><strong>makemigrations</strong> 을 실행시킴으로서, 당신이 모델을 변경시킨 사실과(이 경우에는 새로운 모델을 만들었습니다) 이 변경사항을 <strong>migration</strong>으로 저장시키고 싶다는 것을 Django에게 알려준다.</p>\n<h4 id=\"migrate\" style=\"position:relative;\"><a href=\"#migrate\" aria-label=\"migrate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>migrate</h4>\n<p>migrate 명령은 아직 적용되지 않은 migration을 모두 수집해 이를 실행하며(Django는 django_migrations 테이블을 두어 마이그레이션 적용 여부를 추적한다.) 이 과정을 통해 모델에서의 변경 사항들과 데이터베이스의 스키마의 동기화가 이루어진다.</p>\n<blockquote>\n<p><strong>migration</strong>은 매우 기능이 강력하여, 마치 프로젝트를 개발할 때처럼 데이터베이스나 테이블에 손대지 않고도 모델의 반복적인 변경을 가능하게 해준다. 동작 중인 데이터베이스를 자료 손실 없이 업그레이드 하는 데 최적화 되어 있다. </p>\n</blockquote>\n<p>✣ 지금은 모델의 변경을 만드는 세 단계의 지침을 기억하세요❗️</p>\n<blockquote>\n<ol>\n<li>(models.py 에서) 모델을 변경합니다.</li>\n</ol>\n</blockquote>\n<ol start=\"2\">\n<li><code class=\"language-text\">python manage.py makemigrations</code>을 통해 이 변경사항에 대한 마이그레이션을 만드세요.</li>\n<li><code class=\"language-text\">python manage.py migrate</code>  명령을 통해 변경사항을 데이터베이스에 적용하세요.</li>\n</ol>\n<h2 id=\"api-가지고-놀기\" style=\"position:relative;\"><a href=\"#api-%EA%B0%80%EC%A7%80%EA%B3%A0-%EB%86%80%EA%B8%B0\" aria-label=\"api 가지고 놀기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API 가지고 놀기</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">python manage<span class=\"token punctuation\">.</span>py shell</code></pre></div>\n<p>python 쉘에서 django가 접근할 수 있는 Python 모듈 경로를 그대로 사용할 수 있기 때문에 django에서 동작하는 모든 명령을 쉘에서 그대로 시험해 볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">*</span> 쉘\n\n<span class=\"token operator\">>>></span> <span class=\"token keyword\">from</span> polls<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Choice<span class=\"token punctuation\">,</span> Question\n<span class=\"token operator\">>>></span> <span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>utils <span class=\"token keyword\">import</span> timezone\n<span class=\"token operator\">>>></span> q <span class=\"token operator\">=</span> <span class=\"token function\">Question</span><span class=\"token punctuation\">(</span>question_text<span class=\"token operator\">=</span><span class=\"token string\">\"What`s new?\"</span><span class=\"token punctuation\">,</span>pub_date<span class=\"token operator\">=</span>timezone<span class=\"token punctuation\">.</span><span class=\"token function\">localtime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n# q 라는 Question db를 생성함<span class=\"token punctuation\">.</span> qustion_text 필드에는 <span class=\"token string\">\"what's new?\"</span> 라는 질문이 들어가고 pub_date 라는 필드에는 django<span class=\"token punctuation\">.</span>utils 모듈에 존재하는 timezone 함수를 사용해 현재 시간을 넣어줌\n<span class=\"token operator\">>>></span> q<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n# save함수로 db를 저장해준다\n<span class=\"token operator\">>>></span> q<span class=\"token punctuation\">.</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n# q라는 db에 id라는 필드를 생성해준적이 없는데 <span class=\"token number\">1</span>이 반환된다<span class=\"token punctuation\">.</span> 자동으로 생성되는 고유 id값이라고 생각된다<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>>></span> q<span class=\"token punctuation\">.</span>question_text \n# q 라는 db의 question_text 필드의 값을 반환해준다<span class=\"token punctuation\">.</span> <span class=\"token punctuation\">(</span>what`s <span class=\"token keyword\">new</span><span class=\"token operator\">?</span> 가 반환됨<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>>></span> q<span class=\"token punctuation\">.</span>pub_date\n# q 라는 db의 pub_date 필드의 값을 반환해준다<span class=\"token punctuation\">.</span>\n\n<span class=\"token operator\">>>></span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n# Question 객체로 정의된 db를 모두 반환한다<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>>></span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n# id가 <span class=\"token number\">1</span>값을 가지고있는 Question db를 검색한다\n\n<span class=\"token operator\">>>></span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>question_text__startswith<span class=\"token operator\">=</span><span class=\"token string\">\"what\"</span><span class=\"token punctuation\">)</span>\n# question_text가 <span class=\"token string\">'what'</span> 으로 시작되는 것을 <span class=\"token function\">검색한다</span> <span class=\"token punctuation\">(</span>__startswith 옵션은 시작되는 문자열이나 숫자를 검색<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>>></span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>question_text__endswith<span class=\"token operator\">=</span><span class=\"token string\">\"what\"</span><span class=\"token punctuation\">)</span>\n# question_text가 <span class=\"token string\">'what'</span> 으로 끝나는 것을 <span class=\"token function\">검색한다</span> <span class=\"token punctuation\">(</span>__endswith 옵션은 끝나는 문자열이나 숫자를 검색<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">>>></span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>pub_date__year<span class=\"token operator\">=</span>current_year<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>>></span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n# Question이라는 model을 가진 db중 고유 필드인 id가 <span class=\"token number\">2</span>인 db를 가져옴<span class=\"token punctuation\">.</span>\n# 고유 필드인 id가 <span class=\"token number\">2</span>인 db가 없으니 err\n<span class=\"token operator\">>>></span> q <span class=\"token operator\">=</span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>pk<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n# q라는 db에 Question이라는 model을 가진 db중 고유 필드인 pk 값이 <span class=\"token number\">1</span>인 db를 가져와 q에 저장함<span class=\"token punctuation\">.</span>\n\n<span class=\"token operator\">>>></span> q<span class=\"token punctuation\">.</span>choice_set<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n# q라는 <span class=\"token function\">db</span><span class=\"token punctuation\">(</span>Question모델<span class=\"token punctuation\">)</span>와 관계형 <span class=\"token function\">데이터베이스</span><span class=\"token punctuation\">(</span>ForeignKey<span class=\"token punctuation\">)</span>인 Choice 모델로 생성된 Choice db 목록을 반환한다<span class=\"token punctuation\">.</span> 아직 Choice 모델로 db를 생성한적이 없으니 아무것도 반환되지 않는다<span class=\"token punctuation\">.</span>\n\n<span class=\"token operator\">>>></span> q<span class=\"token punctuation\">.</span>choice_set<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>choice_text<span class=\"token operator\">=</span><span class=\"token string\">'The sky'</span><span class=\"token punctuation\">,</span>votes<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n# q라는 <span class=\"token function\">db</span><span class=\"token punctuation\">(</span>Question모델<span class=\"token punctuation\">)</span>와 관계형 데이터베이스인 Choice 모델로 Choice db를 생성해주고 q라는 db에 넣고 셋팅까지 해준다<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">>>></span> q<span class=\"token punctuation\">.</span>choice_set<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n# q 라는 <span class=\"token function\">db</span><span class=\"token punctuation\">(</span>Question모델<span class=\"token punctuation\">)</span>와 관계형 데이터베이스인 Choice 모델 db의 갯수를 반환한다<span class=\"token punctuation\">.</span>\n\n<span class=\"token operator\">>>></span> Choice<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>question__pub_date__year<span class=\"token operator\">=</span>current_year<span class=\"token punctuation\">)</span>\n# Choice 모델 db와 관계형 데이터베이스인 Question 모델 db의 pub_date 필드가 current_year과 같은 Choice 모델 db를 검색한다<span class=\"token punctuation\">.</span>\n\n<span class=\"token operator\">>>></span> c <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span>choice_set<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>choice_text<span class=\"token operator\">=</span><span class=\"token string\">'The sky'</span><span class=\"token punctuation\">)</span>\n# q라는 Question 모델 db에 Question 모델과 관계형 데이터베이스인 Choice 모델의 db의 choice_text 필드가 The sky 인 Choice 모델 db를 c라는 변수에 담는다<span class=\"token punctuation\">.</span>\n\n<span class=\"token operator\">>>></span> c<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n# c라는 db를 삭제한다<span class=\"token punctuation\">.</span>\n# c라는 변수에 따로 Choice 모델 db 를 담았어도 q 라는 Question 모델 db의 Choice 모델 db가 사라진다<span class=\"token punctuation\">.</span></code></pre></div>\n<h2 id=\"관리자-생성\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A6%AC%EC%9E%90-%EC%83%9D%EC%84%B1\" aria-label=\"관리자 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관리자 생성</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">python manage<span class=\"token punctuation\">.</span>py createsuperuser\n\nUsername<span class=\"token operator\">:</span> misun  #원하는 username 입력하고 엔터 누르면\n\nEmail address<span class=\"token operator\">:</span> misun9283@gamil<span class=\"token punctuation\">.</span>com   #원하는 이메일주소 입력<span class=\"token punctuation\">.</span>\n\n#그리고 암호입력</code></pre></div>\n<p><a href=\"http://127.0.0.1:8000/admin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://127.0.0.1:8000/admin</a>\n여기 들어가서 유저네임, 패스워드 입력한다.</p>\n<h3 id=\"관리-사이트에서-poll-app을-변경하기\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EB%A6%AC-%EC%82%AC%EC%9D%B4%ED%8A%B8%EC%97%90%EC%84%9C-poll-app%EC%9D%84-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0\" aria-label=\"관리 사이트에서 poll app을 변경하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관리 사이트에서 poll app을 변경하기</h3>\n<p><code class=\"language-text\">polls/admin.py</code> 들어가서 admin사이트에서 question을 등록한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>contrib <span class=\"token keyword\">import</span> admin\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Question\n\nadmin<span class=\"token punctuation\">.</span>site<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>Question<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"https://images.velog.io/images/misun9283/post/40bc49f6-5c3c-4260-9da3-69872944ed90/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202020-04-27%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%2010.19.18.png\"></p>\n<p>이렇게 Question이 추가가 되어있다.</p>\n<h2 id=\"view-추가\" style=\"position:relative;\"><a href=\"#view-%EC%B6%94%EA%B0%80\" aria-label=\"view 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>view 추가</h2>\n<p>이제ㅣ polls/views.py에 뷰를 추가해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">def <span class=\"token function\">detail</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> question_id<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You're looking at question %s.\"</span> <span class=\"token operator\">%</span> question_id<span class=\"token punctuation\">)</span>\n\t # polls<span class=\"token operator\">/</span>urls<span class=\"token punctuation\">.</span>py에 매핑되있는대로 url뒤에 int형 question_id가 오면 해당 HttpResponse를 반환한다<span class=\"token punctuation\">.</span>\n     \ndef <span class=\"token function\">results</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> question_id<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    response <span class=\"token operator\">=</span> <span class=\"token string\">\"You're looking at the results of question %s.\"</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span>response <span class=\"token operator\">%</span> question_id<span class=\"token punctuation\">)</span>\n\ndef <span class=\"token function\">vote</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> question_id<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">HttpResponse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You're voting on question %s.\"</span> <span class=\"token operator\">%</span> question_id<span class=\"token punctuation\">)</span></code></pre></div>\n<p>다음, path()호출을 추가하여 이러한 새로운 뷰을 polls.urls 모듈로 연결한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> views\n\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    # ex<span class=\"token operator\">:</span> <span class=\"token regex\">/polls/</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    # ex<span class=\"token operator\">:</span> <span class=\"token operator\">/</span>polls<span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token operator\">/</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;int:question_id>/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'detail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    # ex<span class=\"token operator\">:</span> <span class=\"token operator\">/</span>polls<span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token operator\">/</span>results<span class=\"token operator\">/</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;int:question_id>/results/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'results'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    # ex<span class=\"token operator\">:</span> <span class=\"token operator\">/</span>polls<span class=\"token operator\">/</span><span class=\"token number\">5</span><span class=\"token operator\">/</span>vote<span class=\"token operator\">/</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;int:question_id>/vote/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>vote<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'vote'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    #url뒤에 int형으로 question_id가 오면 views의 detail함수를 실행한다<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"template-파일\" style=\"position:relative;\"><a href=\"#template-%ED%8C%8C%EC%9D%BC\" aria-label=\"template 파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>template 파일</h2>\n<blockquote>\n<p><strong>템플릿(Template) ?</strong>\nHTML은 파이썬 코드를 담을 수 없다. 템플릿은 파이썬 코드를 HTML에 넣을 수 있게 해준다.</p>\n</blockquote>\n<p>먼저 polls 폴더에 templates 라는 폴더를 만들고, 그안에 polls 라는 폴더를 또 만든다. 그안에 index.html을 생성하고 다음 코드를 넣어주자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> <span class=\"token keyword\">if</span> latest_question_list <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> <span class=\"token keyword\">for</span> question <span class=\"token keyword\">in</span> latest_question_list <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"/polls/{{ question.id }}/\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> question<span class=\"token punctuation\">.</span>question_text <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> endfor <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n<span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>No polls are available<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> endif <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>{% %} 안에 파이썬 코드를 넣고, {{ }} 안에 전달될 값을 넣으면 된다. 그리고 기본적으로 for문이나 if조건문을 사용시엔 무조건 파이썬문장이 끝났다는 태그, 즉, {%endfor%}나 {%endif%}로 닫아줘야한다.</p>\n</blockquote>\n<p>자 이제 View에서 저 index 템플릿을 출력하는 코드를 작성하자</p>\n<p><code class=\"language-text\">polls/views.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"># <span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponse\n# 이제 HttpResponse 말고 shortcut인 render을 써보자\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> render\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Question\n\n\ndef <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n  # question 인스턴스들을 불러오는 코드\n    latest_question_list <span class=\"token operator\">=</span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">order_by</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-pub_date'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'polls/index.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'latest_question_list'</span><span class=\"token operator\">:</span> latest_question_list<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>이러면 이제 템플릿을 통해 HTML이 랜더링 된다.🙃</p>\n<blockquote>\n<p><strong>render()</strong> 함수는 request 객체를 첫번째 인수로 받고, 템플릿 이름을 두번째 인수로 받으며, context 사전형 객체를 세전째 선택적(optional) 인수로 받는다. 인수로 지정된 context로 표현된 템플릿 HttpResponse 객체가 반환된다.</p>\n</blockquote>\n<h2 id=\"404-에러-일으키기\" style=\"position:relative;\"><a href=\"#404-%EC%97%90%EB%9F%AC-%EC%9D%BC%EC%9C%BC%ED%82%A4%EA%B8%B0\" aria-label=\"404 에러 일으키기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>404 에러 일으키기</h2>\n<p>이제, 질문의 상세 뷰에 태클을 걸어보자.</p>\n<h3 id=\"http404\" style=\"position:relative;\"><a href=\"#http404\" aria-label=\"http404 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Http404</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> Http404\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> render\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Question\n# <span class=\"token operator\">...</span>\ndef <span class=\"token function\">detail</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> question_id<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token operator\">:</span>\n        question <span class=\"token operator\">=</span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>pk<span class=\"token operator\">=</span>question_id<span class=\"token punctuation\">)</span>\n    except Question<span class=\"token punctuation\">.</span>DoesNotExist<span class=\"token operator\">:</span>\n        raise <span class=\"token function\">Http404</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Question does not exist\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'polls/detail.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'question'</span><span class=\"token operator\">:</span> question<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>뷰는 요청된 질문의 id가 없을 경우 http404 예외를 발생시킨다.</p>\n<h3 id=\"지름길-getobjector_404\" style=\"position:relative;\"><a href=\"#%EC%A7%80%EB%A6%84%EA%B8%B8-getobjector_404\" aria-label=\"지름길 getobjector_404 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>지름길: get<em>object</em>or_404()</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> get_object_or_404<span class=\"token punctuation\">,</span> render\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Question\n# <span class=\"token operator\">...</span>\ndef <span class=\"token function\">detail</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> question_id<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    question <span class=\"token operator\">=</span> <span class=\"token function\">get_object_or_404</span><span class=\"token punctuation\">(</span>Question<span class=\"token punctuation\">,</span> pk<span class=\"token operator\">=</span>question_id<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'polls/detail.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'question'</span><span class=\"token operator\">:</span> question<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"템플릿에서-하드코딩된-url-제거\" style=\"position:relative;\"><a href=\"#%ED%85%9C%ED%94%8C%EB%A6%BF%EC%97%90%EC%84%9C-%ED%95%98%EB%93%9C%EC%BD%94%EB%94%A9%EB%90%9C-url-%EC%A0%9C%EA%B1%B0\" aria-label=\"템플릿에서 하드코딩된 url 제거 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>템플릿에서 하드코딩된 URL 제거</h2>\n<p>방금전 만든 파일에서 이런 코드가 있다</p>\n<p><code class=\"language-text\">polls/templates/polls/index.html</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"/polls/{{ question.id }}\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> question<span class=\"token punctuation\">.</span>question_text <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span></code></pre></div>\n<p>이렇게 하드코딩된 URL은 수많은 템플릿을 사용할 때 변경하기 어렵다.\n<strong>{% url %}</strong> template 태그를 사용하여 url 설정에 정의된 특정한 URL 경로들의 의존성을 제거할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"{% url 'detail' question.id %}\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> question<span class=\"token punctuation\">.</span>question_text <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></code></pre></div>\n<p> <code class=\"language-text\">polls/urls/py</code> 에서 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;int:question_id>/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'detail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>이제 url은 urls.py에서만 바꾸면된다.</p>\n<h2 id=\"url의-이름공간-정하기\" style=\"position:relative;\"><a href=\"#url%EC%9D%98-%EC%9D%B4%EB%A6%84%EA%B3%B5%EA%B0%84-%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"url의 이름공간 정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>URL의 이름공간 정하기</h2>\n<p>튜토리얼의 프로젝트는 polls라는 앱 하나만 가지고 진행한다. 실제 Django 프로젝트는 앱이 몇개라도 올 수 있다. Django는 이 앱들의 URL을 어떻게 구별해 낼까요? 예를 들어, polls 앱은 detail이라는 뷰를 가지고 있고, 동일한 프로젝트에 블로그를 위한 앱이 있을 수도 있습니다. Django가 {% url %} 템플릿태그를 사용할 때, 어떤 앱의 뷰에서 URL을 생성할지 알 수 있을까?</p>\n<p>정답은 <code class=\"language-text\">URLconf에 이름공간(namespace)을 추가</code>하는 것이다. <code class=\"language-text\">polls/urls.py</code> 파일에 <code class=\"language-text\">app_name</code>을 추가하여 어플리케이션의 이름공간을 설정할 수 있다.</p>\n<p><code class=\"language-text\">polls/urls.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> views\n\napp_name <span class=\"token operator\">=</span> <span class=\"token string\">'polls'</span>\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;int:question_id>/results/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;int:question_id>/vote/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>vote<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"vote\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;int:question_id>/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>detail<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"detail\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>이제 polls/index.html 템플릿의 기존내용을 이름공간으로 나눠진 상세 view를 가리키도록 변경하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"{% url 'polls:detail' question.id %}\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> question<span class=\"token punctuation\">.</span>question_text <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"form\" style=\"position:relative;\"><a href=\"#form\" aria-label=\"form permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>form</h2>\n<p>일단 detail.html 파일에 간단한 POST Form 을 넣었다</p>\n<p><code class=\"language-text\">polls/templates/polls/detail.html</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> question<span class=\"token punctuation\">.</span>question_text <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n\n<span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> <span class=\"token keyword\">if</span> error_message <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>strong<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> error_message <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>strong<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n<span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> endif <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string\">\"{% url 'polls:vote' question.id %}\"</span> method<span class=\"token operator\">=</span><span class=\"token string\">\"post\"</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> csrf_token <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> <span class=\"token keyword\">for</span> choice <span class=\"token keyword\">in</span> question<span class=\"token punctuation\">.</span>choice_set<span class=\"token punctuation\">.</span>all <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"radio\"</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"choice\"</span> id<span class=\"token operator\">=</span><span class=\"token string\">\"choice{{ forloop.counter }}\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"{{ choice.id }}\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>label <span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"choice{{ forloop.counter }}\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> choice<span class=\"token punctuation\">.</span>choice_text <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> endfor <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"submit\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"Vote\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span></code></pre></div>\n<p>이제 POST 메서드로 들어온 폼 데이터를 처리해보자.\n<code class=\"language-text\">{% csrf_token %} : 해커의 CSRF 공격을 막아주는 코드이다</code></p>\n<blockquote>\n<p><strong>CSRF (Cross Site Request Forgery) 공격이란?</strong>\n사용자가 피싱사이트에 접근했을 때, 사용자의 권한을 가지고 지정된 사이트의 정보를 마음대로 조작하는 해킹방법이다.</p>\n</blockquote>\n<p>csrf 공격을 막는 방법으론 대표적으로 2가지가 있다.</p>\n<blockquote>\n<li> \n Referrer 검증\n</blockquote>\n </li>\n <li>\n Security Token 사용 (A.K.A CSRF Token)\n  </li>\n<p><code class=\"language-text\">polls/views.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> render<span class=\"token punctuation\">,</span> get_object_or_404\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponseRedirect\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> reverse\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Question<span class=\"token punctuation\">,</span> Choice\n\ndef <span class=\"token function\">vote</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> question_id<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    question <span class=\"token operator\">=</span> <span class=\"token function\">get_object_or_404</span><span class=\"token punctuation\">(</span>Question<span class=\"token punctuation\">,</span> pk<span class=\"token operator\">=</span>question_id<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span><span class=\"token operator\">:</span>\n        selected_choice <span class=\"token operator\">=</span> question<span class=\"token punctuation\">.</span>choice_set<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>pk<span class=\"token operator\">=</span>request<span class=\"token punctuation\">.</span><span class=\"token constant\">POST</span><span class=\"token punctuation\">[</span><span class=\"token string\">'choice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">except</span> <span class=\"token punctuation\">(</span>KeyError<span class=\"token punctuation\">,</span> Choice<span class=\"token punctuation\">.</span>DoesNotExist<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token string\">'polls/detail.html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'question'</span><span class=\"token operator\">:</span> question<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'error_message'</span><span class=\"token operator\">:</span> <span class=\"token string\">\"You didn't select a choice\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token operator\">:</span>\n        selected_choice<span class=\"token punctuation\">.</span>votes <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        selected_choice<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">HttpResponseRedirect</span><span class=\"token punctuation\">(</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token string\">'polls:results'</span><span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>question<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<ol>\n<li>위의 vote 뷰는 URL로 들어온 question_id 를 가진 Question을 찾는다.</li>\n</ol>\n</blockquote>\n<ol start=\"2\">\n<li>POST로 들어온 id 와 같은 기본키를 가진 Choice를 찾아 그 Question에 단다.</li>\n<li>만약 KeyError(초이스를 선택안했거나)나 Choice를 못찾으면 다시 Detail 페이지로 ErrorMessage와 함께 랜더링 시킨다.</li>\n<li>에러가 없다면 찾은 Choice의 votes 값을 1올리고 Result 페이지로 리다이렉트 한다.</li>\n</ol>\n<p>*reverse 함수는 app_name처럼 하드코딩을 제거해주는 역할을 하고 ‘/polls/3/results/’ 를 반환해준다 (3은 임의의 id)</p>\n<p>form datas를 받을 때는 <code class=\"language-text\">request.POST[&#39;choice&#39;]</code> 이렇게 받을 수 있다.</p>\n<h2 id=\"generic-view\" style=\"position:relative;\"><a href=\"#generic-view\" aria-label=\"generic view permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>generic view</h2>\n<p>제너릭 뷰는 만들어진 템플릿 클래스를 상속받아서 최소한의 설정으로만 템플릿을 랜더링 시켜주는 뷰이다.</p>\n<p>index 뷰와 detail 뷰를 제너릭 뷰로 변경해보자</p>\n<p><code class=\"language-text\">polls/urls.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> path\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> views\n\napp_name <span class=\"token operator\">=</span> <span class=\"token string\">'polls'</span>\nurlpatterns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>IndexView<span class=\"token punctuation\">.</span><span class=\"token function\">as_view</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;int:pk>/'</span><span class=\"token punctuation\">,</span> views<span class=\"token punctuation\">.</span>DetailView<span class=\"token punctuation\">.</span><span class=\"token function\">as_view</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">=</span><span class=\"token string\">'detail'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>먼저 urls.py에서 제너릭 뷰를 쓴다고 선언해두자\nIndexView 와 DetailView는 views.py에서 만들 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>http <span class=\"token keyword\">import</span> HttpResponseRedirect\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>shortcuts <span class=\"token keyword\">import</span> get_object_or_404<span class=\"token punctuation\">,</span> render\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>urls <span class=\"token keyword\">import</span> reverse\n<span class=\"token keyword\">from</span> django<span class=\"token punctuation\">.</span>views <span class=\"token keyword\">import</span> generic\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Choice<span class=\"token punctuation\">,</span> Question\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">IndexView</span><span class=\"token punctuation\">(</span>generic<span class=\"token punctuation\">.</span>ListView<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    template_name <span class=\"token operator\">=</span> <span class=\"token string\">'polls/index.html'</span>\n    context_object_name <span class=\"token operator\">=</span> <span class=\"token string\">'latest_question_list'</span>\n\n    def <span class=\"token function\">get_queryset</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n        <span class=\"token string\">\"\"</span><span class=\"token string\">\"Return the last five published questions.\"</span><span class=\"token string\">\"\"</span>\n        <span class=\"token keyword\">return</span> Question<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span><span class=\"token function\">order_by</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-pub_date'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">DetailView</span><span class=\"token punctuation\">(</span>generic<span class=\"token punctuation\">.</span>DetailView<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    model <span class=\"token operator\">=</span> Question\n    template_name <span class=\"token operator\">=</span> <span class=\"token string\">'polls/detail.html'</span></code></pre></div>\n<li>ListView :객체의 리스트를 display\n<li> DetailView : 객체 하나의 detail 페이지를 display\n  \n<p>IndexView는 generic.ListView를 상속 받았고\nDetailView는 generic.DetailView를 상속받았다.</p>","fields":{"slug":"/posts/django_tutorial_review","tagSlugs":["/tag/django/","/tag/django-tutorial/","/tag/web-development/"]},"frontmatter":{"date":"2020-04-30T15:30:32.169Z","description":"파이썬 기반으로 작성된 오픈소스 웹 어플리케이션 프레임워크입니다. 프레임워크란 간단히 설명하자면 뼈대, 골조라고도 하며 프로그램을 개발하는 데에 있어서 사용되는 기본 개념 구조입니다. 즉, 파이썬 프로그래밍 언어를 기반으로 한 동적인 웹을 작성하는 데에 있어 장고라는 기본 개념 구조 요소를 이용하여 개발하게 되는 것입니다.","tags":["Django","Django_Tutorial","Web Development"],"title":"Django Tutorial Review","socialImage":"https://media.vlpt.us/images/hanrimjo/post/99fab083-1722-46d2-a46a-0e98b6c2eb62/image.png"}}},"pageContext":{"slug":"/posts/django_tutorial_review"}}}